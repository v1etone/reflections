When would you want to use a remote repository rather than keeping all your work local?
If i want to work with other people and share the work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
If many people contribute to a file, things could become quite messy. Having an overview and knowing when to pull which kind of changes is a way to 
keep structure in your file.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are a feature of GitHub, you can use it to clone another repository on github, without saving it to your local repository. 
Cloning is like downloading a from a remote repository to a local one. 
Branches are the inner structure of commits. 

What is the benefit of having a copy of the last known state of the remote stored locally?
Being online all the time isn't guaranteed, so after being offline for a while you can compare those with the online repository.



git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin  |    Get the changes from the remote location into the (hidden?) origin/master branch
